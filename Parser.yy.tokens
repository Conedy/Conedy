

%scanner Scanner.h

//%lines
%baseclass-preinclude "instruction.h"



%union {
//  command *cmd;
  expression<baseType> *doubleExpression;
  expression<bool> *boolExpression;
  expression<bool> *booleanExpression;
  expression<int> *integerExpression;
  expression<nodeDescriptor> *nodeDescriptorExpression;
  expression<string> *stringExpression;
  expression<nodeBlueprint*> *nodCmd;
  networkTemplate* netCmd;
  expression<edgeBlueprint*> *lCmd;
  instruction *cmd;
  vector <function <baseType() > > *randomVec;
  expressionVector <baseType> *vec;
}



%left <booleanExpression> OR
%left <booleanExpression> AND
%left <doubleExpression> '+' '-'
%left <doubleExpression> '*' '/'
%left <doubleExpression> UMINUS
%left <doubleExpression> LOG
%left <doubleExpression> SQRT
%left <doubleExpression> EXP
%left <doubleExpression> SIN
%left <booleanExpression> NOT
%left '(' ')'
%left <booleanExpression> EQUAL NEQUAL GREATEREQUAL LESSEQUAL
%left '.'

%token <booleanExpression> BOOLONE BOOLZERO
%token <doubleExpression> FLOATCONSTANT DOUBLEVAR
%token <boolExpression> BOOLVAR
%token <stringExpression> STRINGVAR
%token <nodCmd> NODEVAR
%type <integerExpression> integer statisticsNetworkCommandInt
%type <nodeDescriptorExpression> nodeDescriptor
%token <integerExpression> GETRANDOMSEED COMANDLINE INT INTVAR
%token <stringExpression> ID 
%type <stringExpression> SYSTEMCOMMAND WHILE STRING COMANDLINESTRING
%token PRINT EXIT LOOP  IF FOR   VECTORFOR CHAINEDFOR NETWORKTOKEN STRINGTOKEN NODETOKEN INTTOKEN DOUBLETOKEN BOOLTOKEN
// Netzwerk-Befehle
%token USERANDOMPOSITIONING REMOVEEDGES SNAPSHOTATEVENTSIGNATURE SNAPSHOTATEVENT USELATTICEPOSITIONING LATTICE READPARAMS NORMALIZEINWEIGHTSUM OBSERVEALL OBSERVEGL OBSERVEGLUT REWIRETARGET ADDRANDOMEDGES ADDRANDOMEDGESDEGREEDISTRIBUTION ADDRANDOMEDGESDEGREEDISTRIBUTIONUNDIRECTED REWIRESOURCE REWIRESOURCEPERTIMESTEP DELAYLINK COMPONENT CYCLE LINE CLEAR SNAPSHOT ADDNODE  PRINTNODESTATISTICS ADDEDGE RANDOMNETWORK OBSERVE OBSERVECOMPONENTS OBSERVEMEANPHASE OBSERVEPHASEDISTANCE OBSERVEPHASECORRELATION OBSERVEPHASECOHERENCE OBSERVEMEAN OBSERVETIME OBSERVEEVENT OBSERVEEVENTTIMES ADDGLOBALNOISE NOISETOSTATES RANDOMIZESTATES RANDOMIZEPARAMETER MEANDEGREE RANDOMIZEWEIGHTS TORUS CONNECTCLOSENODESTORUS CONNECTCLOSENODES TORUSNEARESTNEIGHBORS READINITIALCONDITION COMPLETENETWORK MEANWEIGHT REWIRE SAVEADJACENCYMATRIX SAVEADJACENCYLIST SAVEGRAPHML SIZE MEANCLUSTERING NEWLINE UNLINK GETPARAM EVOLVE EVOLVEALONG REALIGNWHENDISTANT REALIGNATEVENT REALIGNATEVENTSIGNATURE ISLINKED GETTARGET DEGREE REWIREUNDIRECTED REWIRETARGETUNDIRECTED BETWEENNESSCENTRALITY MEANPATHLENGTH DEGREECENTRALITY CLOSENESSCENTRALITY SELECT COUNTEDGES GETSTATE INDEGREE OUTDEGREE ISCONNECTED ISDIRECTED SETPARAM
// Nodes
%token NODE IZHIKEVICHMAP REMOVEOBSERVER REMOVEINPUT STARTINGCONDITIONOPENWAVEENDING STARTINGCONDITIONSMALLDISTURBANCE STARTINGCONDITIONOPENWAVEMIDDLE STREAMINNODE STREAMINLATTICE SETSTATE CREATEFROMADJACENCYLIST SETPARAMS 
%token INTEGRATEFIREQUEUE SETRANDOMSEED  RANDOMBLUEPRINTNODE STREAMOUTNODE SETTIME
// addNewNode.py token
// Edges
%token COMPONENT_WEIGHTEDEDGE COMPONENT_STATICWEIGHTEDEDGE 
%token STATICCOMPONENT STATICCOMPONENT_WEIGHTEDEDGE STATICCOMPONENT_STATICWEIGHTEDEDGE 
%token RANDOMTARGET RANDOMTARGET_WEIGHTEDEDGE RANDOMTARGET_STATICWEIGHTEDEDGE 
%token STEPEDGE STEPEDGE_WEIGHTEDEDGE STEPEDGE_STATICWEIGHTEDEDGE 

PULSECOUPLEEDGE STATICWEIGHTEDEDGE PULSECOUPLEDELAYEDGE WEIGHTEDEDGE EDGE
// Random
%token GAUSSIAN BIMODAL EXPONENTIAL POWERLAW UNIFORM FROMFILE ADDINPUTFILE  CONSTANT POISSON  INDEGREEDISTRIBUTION OUTDEGREEDISTRIBUTION
// Arithmetic
%token  ASSIGNPLUS ASSIGNMINUS ASSIGNDIVIDE ASSIGNTIMES PLUSPLUS MINUSMINUS ASSIGNMODOLO
%token <netCmd> NETWORKVAR
%type <cmd> loop print instruction declare assign networkCommand bluePrintCommand commands commandBlock while createNetworkCommand for if vectorFor system spatialNetworkCommand

%type <stringExpression> identifier
%type <stringExpression> string

%type <doubleExpression> baseType statisticsNetworkCommandBaseType
%type <booleanExpression> bool
%type <booleanExpression> statisticsNetworkCommandBool
%type <nodCmd> node createNode
%type <netCmd> NETWORK
%type <lCmd> link createLink
%type <vec> argList
%type <randomVec> randomList
%type <doubleExpression> random
%start program


