
[kuramoto]
type = ode
dimension = 1
parameter = 1
parametername1 = omega
defaultvalue1 = 1.0
#dynamics=
#   node::edgeDescriptor ia, ie;
#   ia =0; 
#   ie = degree;
#   dxdt[0] = omega;
#   for (; ia != ie; ia++)
#      dxdt[0] += getWeight(ia) * sin ( 2 * M_PI*(getTargetState(ia) - x[0] ));

dynamics=
	dxdt[0] = omega;
	forEachEdge(
		dxdt[0] = dxdt[0] + weight * sin ( 2 * M_PI * (state - x[0]));
	)
documentation=
	Kuramoto oscillator, see Strogatz 2000, Physica D


[gaussianKuramoto]
type = sde
dimension = 1
parameter = 2
parametername1 = omega
defaultvalue1 = 1.0
parametername2 = sigmaNoise
defaultvalue2 = 0.0
#dynamics=
#   node::edgeDescriptor ia, ie;
#   ia =0; 
#   ie = degree;
#   dxdt[0] = omega;
#   for (; ia != ie; ia++)
#      dxdt[0] += getWeight(ia) * sin ( 2 * M_PI*(getTargetState(ia) - x[0] ));

dynamics=
	dxdt[0] = omega;
	s[0] = sigmaNoise;
	forEachEdge(
		dxdt[0] = dxdt[0] + weight * sin ( 2 * M_PI * (state - x[0]));
	)
documentation=
	Kuramoto oscillator, see Strogatz 2000, Physica D

