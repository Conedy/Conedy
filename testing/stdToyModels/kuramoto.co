network N;

kuramoto_omega = 0.1;

samplingTime = 0.01;


int firstNodeNumber;
int secondNodeNumber;
int thirdNodeNumber;
int fourthNodeNumber;

#just one kuramoto oscillator
firstNodeNumber = N.addNode(kuramoto());
N.setState(firstNodeNumber, 0.0 );
N.observeTime("output/kuramoto.co.one");
N.observe(0,"output/kuramoto.co.one", component(0));
N.evolve(0.0,10.0);
N.removeObserver();


#adding a second. They should synchronize.
secondNodeNumber = N.addNode(kuramoto());
N.addEdge (firstNodeNumber,secondNodeNumber  ,0.1);
N.addEdge (secondNodeNumber, firstNodeNumber ,0.1);





#small ring of oscillators. Should not synchronize.
N.setState(firstNodeNumber, 0.0 );
N.setState(secondNodeNumber, 0.3 );

N.observeTime("output/kuramoto.co.two");
N.observeAll("output/kuramoto.co.two");
N.evolve(0.0,40.0);
N.removeObserver();

thirdNodeNumber = N.addNode(kuramoto());
fourthNodeNumber = N.addNode(kuramoto());
N.addEdge ( secondNodeNumber, thirdNodeNumber ,0.1);
N.addEdge ( thirdNodeNumber, secondNodeNumber ,0.1);


N.addEdge ( thirdNodeNumber, fourthNodeNumber ,0.1);
N.addEdge ( fourthNodeNumber, thirdNodeNumber ,0.1);

N.addEdge ( fourthNodeNumber, firstNodeNumber ,0.1);
N.addEdge ( firstNodeNumber, fourthNodeNumber ,0.1);
N.setState(firstNodeNumber, 0.0 );
N.setState(secondNodeNumber, 0.245 );
N.setState(thirdNodeNumber, 0.495 );
N.setState(fourthNodeNumber, 0.7502 );

N.observeTime("output/kuramoto.co.ring");
N.observeAll("output/kuramoto.co.ring");
N.evolve(0.0,40.0);


