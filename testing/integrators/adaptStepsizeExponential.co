network N;

#exponentialGsl_omega = 0.89;
#exponentialGsl_a = 0.165;
#exponentialGsl_b = 0.2;
#exponentialGsl_c = 10.0;
#


samplingTime = 0.01;
odeStepSize = 0.005;


odeIsAdaptive = false;

#odeStepType = "gsl_odeiv2_step_rk2";

odeStepType = "gsl_rk4";


odeStepSize = 0.0001;
samplingTime = 0.0001;


N.addNode(exponentialGsl());
#N.setState(0, 0.0, 0.0, 0.0 );
N.setState (0,10.0);



N.observeTime("output/adaptStepsizeExponential.co.series");
N.observe(0,"output/adaptStepsizeExponential.co.series",component(0));
N.evolve(0.0,10.0);

N.clear();

odeIsAdaptive = true;

odeAbsError = 0.000000000001;
odeRelError = 0.000000000001;



int nodeNumber;


nodeNumber = N.addNode(exponentialGsl());
#N.setState(nodeNumber, 0.0, 0.0, 0.0 );
N.setState (nodeNumber,10.0);

N.observeTime("output/adaptStepsizeExponential.co.series2");
N.observe(nodeNumber,"output/adaptStepsizeExponential.co.series2",component(0));

N.evolve(0.0,10.0);


